{"ast":null,"code":"var _jsxFileName = \"/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/users/updateUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Modal from \"react-modal\";\n\n// Initialize react-modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nexport default function UpdateUser() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [updateModalIsOpen, setUpdateModalIsOpen] = useState(false);\n  const updateData = () => {\n    var _location$state;\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.userData)) {\n      return; // No user data to update\n    }\n\n    const userId = location.state.userData._id;\n    const updatedData = {\n      fname,\n      lname\n    };\n    fetch(`http://localhost:5000/updateUser/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(updatedData)\n    }).then(res => res.json()).then(data => {\n      if (data.status === \"ok\") {\n        setUpdateSuccess(true);\n        setUpdateModalIsOpen(false); // Close the modal\n      } else {\n        // Handle errors, e.g., display an error message\n        console.error(\"Error updating user data:\", data.error);\n      }\n    });\n  };\n  useEffect(() => {\n    var _location$state2;\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.userData) {\n      const {\n        fname,\n        lname,\n        email\n      } = location.state.userData;\n      setFname(fname || \"\");\n      setLname(lname || \"\");\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUpdateModalIsOpen(true),\n      children: \"Open Update Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: updateModalIsOpen,\n      onRequestClose: () => setUpdateModalIsOpen(false),\n      contentLabel: \"Update Account\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: fname,\n        onChange: e => setFname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lname,\n        onChange: e => setLname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateData,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), updateSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateUser, \"JmXAEoOmffP+X3OiyU5PXeA1oxg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Modal","jsxDEV","_jsxDEV","setAppElement","UpdateUser","_s","location","navigate","fname","setFname","lname","setLname","updateSuccess","setUpdateSuccess","updateModalIsOpen","setUpdateModalIsOpen","updateData","_location$state","state","userData","userId","_id","updatedData","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","data","status","console","error","_location$state2","email","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/users/updateUser.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Modal from \"react-modal\";\n\n// Initialize react-modal\nModal.setAppElement(\"#root\");\n\nexport default function UpdateUser() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [updateModalIsOpen, setUpdateModalIsOpen] = useState(false);\n\n  const updateData = () => {\n    if (!location.state?.userData) {\n      return; // No user data to update\n    }\n\n    const userId = location.state.userData._id;\n    const updatedData = { fname, lname };\n\n    fetch(`http://localhost:5000/updateUser/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.status === \"ok\") {\n          setUpdateSuccess(true);\n          setUpdateModalIsOpen(false); // Close the modal\n        } else {\n          // Handle errors, e.g., display an error message\n          console.error(\"Error updating user data:\", data.error);\n        }\n      });\n  };\n\n  useEffect(() => {\n    if (location.state?.userData) {\n      const { fname, lname, email } = location.state.userData;\n      setFname(fname || \"\");\n      setLname(lname || \"\");\n    }\n  }, [location]);\n\n  return (\n    <div>\n      <button onClick={() => setUpdateModalIsOpen(true)}>Open Update Modal</button>\n      <Modal\n        isOpen={updateModalIsOpen}\n        onRequestClose={() => setUpdateModalIsOpen(false)}\n        contentLabel=\"Update Account\"\n      >\n        <input\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={fname}\n          onChange={(e) => setFname(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Last Name\"\n          value={lname}\n          onChange={(e) => setLname(e.target.value)}\n        />\n        <button onClick={updateData}>Update</button>\n        {updateSuccess && <p>Update successful!</p>}\n      </Modal>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}