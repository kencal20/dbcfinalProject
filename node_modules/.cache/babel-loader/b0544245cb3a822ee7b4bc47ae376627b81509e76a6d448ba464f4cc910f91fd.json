{"ast":null,"code":"var _jsxFileName = \"/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/superUser/createSuperUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateSuperUser({\n  visible,\n  closeModal\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  // const [formErrors, setFormErrors] = useState({});\n\n  const errorStyle = {\n    color: \"red\",\n    // Set the error message text color to red\n    margin: \"5px 0\" // Add some margin for spacing\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Perform form validation\n    // const errors = {};\n    // if (!formData.fname) {\n    //   errors.fname = \"First Name is required\";\n    // }\n    // if (!formData.lname) {\n    //   errors.lname = \"Last Name is required\";\n    // }\n    // if (!formData.email) {\n    //   errors.email = \"Email is required\";\n    // }\n    // if (!formData.password) {\n    //   errors.password = \"Password is required\";\n    // }\n    // if (!formData.confirmPassword) {\n    //   errors.confirmPassword = \"Confirm Password is required\";\n    // }\n    // if (formData.password !== formData.confirmPassword) {\n    //   errors.confirmPassword = \"Passwords do not match\";\n    // }\n\n    // if (Object.keys(errors).length > 0) {\n    //   setFormErrors(errors);\n    //   return;\n    // }\n\n    // Reset form errors\n    // setFormErrors({});\n\n    // Continue with the submission\n    // ... (API call to create the super user)\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: visible,\n    onRequestClose: closeModal,\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\" // Semi-transparent background\n      },\n\n      content: {\n        width: \"600px\",\n        height: \"600px\"\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        children: \"Create Super User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateSuperUser, \"ikonQaKy0OA6MewgkmbWTie1ncg=\");\n_c = CreateSuperUser;\nvar _c;\n$RefreshReg$(_c, \"CreateSuperUser\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","CreateSuperUser","visible","closeModal","_s","formData","setFormData","fname","lname","email","password","confirmPassword","errorStyle","color","margin","handleChange","e","name","value","target","handleSubmit","preventDefault","isOpen","onRequestClose","style","overlay","backgroundColor","content","width","height","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","className","type","_c","$RefreshReg$"],"sources":["/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/superUser/createSuperUser.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\n\nexport default function CreateSuperUser({ visible, closeModal }) {\n  const [formData, setFormData] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  // const [formErrors, setFormErrors] = useState({});\n\n  const errorStyle = {\n    color: \"red\", // Set the error message text color to red\n    margin: \"5px 0\", // Add some margin for spacing\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Perform form validation\n    // const errors = {};\n    // if (!formData.fname) {\n    //   errors.fname = \"First Name is required\";\n    // }\n    // if (!formData.lname) {\n    //   errors.lname = \"Last Name is required\";\n    // }\n    // if (!formData.email) {\n    //   errors.email = \"Email is required\";\n    // }\n    // if (!formData.password) {\n    //   errors.password = \"Password is required\";\n    // }\n    // if (!formData.confirmPassword) {\n    //   errors.confirmPassword = \"Confirm Password is required\";\n    // }\n    // if (formData.password !== formData.confirmPassword) {\n    //   errors.confirmPassword = \"Passwords do not match\";\n    // }\n\n    // if (Object.keys(errors).length > 0) {\n    //   setFormErrors(errors);\n    //   return;\n    // }\n\n    // Reset form errors\n    // setFormErrors({});\n\n    // Continue with the submission\n    // ... (API call to create the super user)\n  };\n\n  return (\n    <Modal\n      isOpen={visible}\n      onRequestClose={closeModal}\n\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Semi-transparent background\n        },\n        content: {\n          width: \"600px\",\n          height: \"600px\",\n        },\n      }}\n\n\n\n    >\n      <form onSubmit={handleSubmit}>\n      <input />\n        <br />\n        <button className=\"btn btn-success\" type=\"submit\">\n          Create Super User\n        </button>\n      </form>\n    </Modal>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,eAAeA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF;;EAEA,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAE,KAAK;IAAE;IACdC,MAAM,EAAE,OAAO,CAAE;EACnB,CAAC;;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCb,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACY,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;;IAElB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;EACF,CAAC;;EAED,oBACErB,OAAA,CAACF,KAAK;IACJwB,MAAM,EAAEpB,OAAQ;IAChBqB,cAAc,EAAEpB,UAAW;IAE3BqB,KAAK,EAAE;MACLC,OAAO,EAAE;QACPC,eAAe,EAAE,oBAAoB,CAAE;MACzC,CAAC;;MACDC,OAAO,EAAE;QACPC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE;MACV;IACF,CAAE;IAAAC,QAAA,eAKF9B,OAAA;MAAM+B,QAAQ,EAAEX,YAAa;MAAAU,QAAA,gBAC7B9B,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACPnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnC,OAAA;QAAQoC,SAAS,EAAC,iBAAiB;QAACC,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAElD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ;AAAC/B,EAAA,CAtFuBH,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}