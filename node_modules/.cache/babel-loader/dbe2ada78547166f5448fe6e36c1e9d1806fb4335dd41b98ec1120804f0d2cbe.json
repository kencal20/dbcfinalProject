{"ast":null,"code":"var _jsxFileName = \"/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/users/updateUser.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import \"./updateUser.css\";\n\n// export default function UpdateUser() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [fname, setFname] = useState(\"\");\n//   const [lname, setLname] = useState(\"\");\n//   const [updateSuccess, setUpdateSuccess] = useState(false);\n\n//   useEffect(() => {\n//     if (location.state?.userData) {\n//       const { fname, lname } = location.state.userData;\n//       setFname(fname || \"\");\n//       setLname(lname || \"\");\n//     }\n//   }, [location]);\n\n//   const updateData = () => {\n//     console.log(location);\n//     fetch(\"http://localhost:5000/updateUser\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\",\n//       },\n\n//       body: JSON.stringify({\n//         id: location.state.userData._id,\n//         fname,\n//         lname,\n//       }),\n//     })\n//       .then((res) => res.json())\n//       .then((data) => {\n//         if (data.status) {\n//           setUpdateSuccess(true);\n//           navigate(\"/userHome\");\n//         }\n//       });\n//   };\n\n//   return (\n//     <div className=\"update_form\">\n//       <h2 className=\"header\">Update Account</h2>\n//       <div className=\"larger_inputContainer\">\n//         <input\n//           className=\"larger_input\"\n//           type=\"text\"\n//           placeholder=\"First Name\"\n//           name=\"fname\"\n//           value={fname}\n//           onChange={(e) => setFname(e.target.value)}\n//           required\n//         />\n//         <input\n//           className=\"larger_input\"\n//           type=\"text\"\n//           placeholder=\"Last Name\"\n//           name=\"lname\"\n//           value={lname}\n//           onChange={(e) => setLname(e.target.value)}\n//           required\n//         />\n//         <input\n//           className=\"larger_input\"\n//           type=\"text\"\n//           placeholder=\"Email\"\n//           name=\"email\"\n//           value={location.state.userData.email}\n//           disabled\n//         />\n\n//         <br />\n//         <br />\n//         <button onClick={updateData} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//       {updateSuccess && (\n//         <div className=\"alert alert-success\" role=\"alert\">\n//           Update successful! Your credentials have been updated.\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateUser(visible, closeModal) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  //   const location = useLocation();\n  //   const navigate = useNavigate();\n  //   const [fname, setFname] = useState(\"\");\n  //   const [lname, setLname] = useState(\"\");\n  //   const [updateSuccess, setUpdateSuccess] = useState(false);\n\n  //   useEffect(() => {\n  //     if (location.state?.userData) {\n  //       const { fname, lname } = location.state.userData;\n  //       setFname(fname || \"\");\n  //       setLname(lname || \"\");\n  //     }\n  //   }, [location]);\n\n  useEffect(() => {\n    setIsModalOpen(visible);\n  }, [visible]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isModalOpen,\n    onRequestClose: closeModal,\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n      },\n      content: {\n        width: \"600px\",\n        height: \"600px\",\n        transition: \"right 0.3s ease\",\n        right: isModalOpen ? 0 : \"-600px\"\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Update Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"larger_inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"larger_input\",\n          type: \"text\",\n          placeholder: \"First Name\",\n          name: \"fname\",\n          value: fname,\n          onChange: e => setFname(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"larger_input\",\n          type: \"text\",\n          placeholder: \"Last Name\",\n          name: \"lname\",\n          value: lname,\n          onChange: e => setLname(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"larger_input\",\n          type: \"text\",\n          placeholder: \"Email\",\n          name: \"email\",\n          value: location.state.userData.email,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateData,\n          className: \"btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), updateSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        children: \"Update successful! Your credentials have been updated.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateUser, \"3tdItJMdYo8BCtZ2aawBhgRLyyM=\");\n_c = UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","UpdateUser","visible","closeModal","_s","isModalOpen","setIsModalOpen","isOpen","onRequestClose","style","overlay","backgroundColor","content","width","height","transition","right","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","value","fname","onChange","e","setFname","target","required","lname","setLname","location","state","userData","email","disabled","onClick","updateData","updateSuccess","role","_c","$RefreshReg$"],"sources":["/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/users/updateUser.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import \"./updateUser.css\";\n\n// export default function UpdateUser() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [fname, setFname] = useState(\"\");\n//   const [lname, setLname] = useState(\"\");\n//   const [updateSuccess, setUpdateSuccess] = useState(false);\n\n//   useEffect(() => {\n//     if (location.state?.userData) {\n//       const { fname, lname } = location.state.userData;\n//       setFname(fname || \"\");\n//       setLname(lname || \"\");\n//     }\n//   }, [location]);\n\n//   const updateData = () => {\n//     console.log(location);\n//     fetch(\"http://localhost:5000/updateUser\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\",\n//       },\n\n//       body: JSON.stringify({\n//         id: location.state.userData._id,\n//         fname,\n//         lname,\n//       }),\n//     })\n//       .then((res) => res.json())\n//       .then((data) => {\n//         if (data.status) {\n//           setUpdateSuccess(true);\n//           navigate(\"/userHome\");\n//         }\n//       });\n//   };\n\n//   return (\n//     <div className=\"update_form\">\n//       <h2 className=\"header\">Update Account</h2>\n//       <div className=\"larger_inputContainer\">\n//         <input\n//           className=\"larger_input\"\n//           type=\"text\"\n//           placeholder=\"First Name\"\n//           name=\"fname\"\n//           value={fname}\n//           onChange={(e) => setFname(e.target.value)}\n//           required\n//         />\n//         <input\n//           className=\"larger_input\"\n//           type=\"text\"\n//           placeholder=\"Last Name\"\n//           name=\"lname\"\n//           value={lname}\n//           onChange={(e) => setLname(e.target.value)}\n//           required\n//         />\n//         <input\n//           className=\"larger_input\"\n//           type=\"text\"\n//           placeholder=\"Email\"\n//           name=\"email\"\n//           value={location.state.userData.email}\n//           disabled\n//         />\n\n//         <br />\n//         <br />\n//         <button onClick={updateData} className=\"btn btn-success\">\n//           Submit\n//         </button>\n//       </div>\n//       {updateSuccess && (\n//         <div className=\"alert alert-success\" role=\"alert\">\n//           Update successful! Your credentials have been updated.\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nexport default function UpdateUser(visible, closeModal) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  //   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [fname, setFname] = useState(\"\");\n//   const [lname, setLname] = useState(\"\");\n//   const [updateSuccess, setUpdateSuccess] = useState(false);\n\n//   useEffect(() => {\n//     if (location.state?.userData) {\n//       const { fname, lname } = location.state.userData;\n//       setFname(fname || \"\");\n//       setLname(lname || \"\");\n//     }\n//   }, [location]);\n\n  useEffect(() => {\n    setIsModalOpen(visible);\n  }, [visible]);\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={closeModal}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          width: \"600px\",\n          height: \"600px\",\n          transition: \"right 0.3s ease\",\n          right: isModalOpen ? 0 : \"-600px\",\n        },\n      }}\n    >\n      <div className=\"update_form\">\n        <h2 className=\"header\">Update Account</h2>\n        <div className=\"larger_inputContainer\">\n          <input\n            className=\"larger_input\"\n            type=\"text\"\n            placeholder=\"First Name\"\n            name=\"fname\"\n            value={fname}\n            onChange={(e) => setFname(e.target.value)}\n            required\n          />\n          <input\n            className=\"larger_input\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n            name=\"lname\"\n            value={lname}\n            onChange={(e) => setLname(e.target.value)}\n            required\n          />\n          <input\n            className=\"larger_input\"\n            type=\"text\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={location.state.userData.email}\n            disabled\n          />\n\n          <br />\n          <br />\n          <button onClick={updateData} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n        {updateSuccess && (\n          <div className=\"alert alert-success\" role=\"alert\">\n            Update successful! Your credentials have been updated.\n          </div>\n        )}\n      </div>\n      \n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}