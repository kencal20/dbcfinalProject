{"ast":null,"code":"var _jsxFileName = \"/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/signup_component2.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... (other imports and code)\n\nexport default function SignupComponent2({\n  visible,\n  closeModal,\n  register\n}) {\n  _s();\n  // ... (other state variables)\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // ... (useEffect and other functions)\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (userType === \"Company\" && secretKey !== \"6eybj;l,;kp-=0-0-090979865e5322457t87{\") {\n      setAlertMessage(\"Invalid Company. Please enter the correct Secret Key.\");\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n      setIsAccountCreated(false);\n      return;\n    }\n    if (formData.password !== confirmPassword) {\n      setAlertMessage(\"Password and Confirm Password do not match.\");\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n      setIsAccountCreated(false);\n      return;\n    }\n    fetch(\"http://localhost:5000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        fname: formData.fname,\n        lname: formData.lname,\n        email: formData.email,\n        password: formData.password,\n        userType,\n        secretKey: userType === \"Company\" ? secretKey : undefined\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json();\n    }).then(data => {\n      setSuccessMessage(\"Account created successfully\");\n      setAlertMessage(\"\");\n      setErrorMessage(\"\");\n      setIsAccountCreated(true);\n    }).catch(error => {\n      setIsAccountCreated(false);\n      console.error(error); // Log the error to the console for debugging\n\n      if (error instanceof Error && error.message.includes(\"E11000 duplicate key error collection: dbcproject.User index: email_1\")) {\n        setErrorMessage(\"Email is already in use. Please use a different email.\");\n      } else {\n        setErrorMessage(\"Account Creation failure\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isModalOpen,\n    onRequestClose: closeModal,\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n      },\n      content: {\n        width: \"600px\",\n        height: \"500px\",\n        margin: \"0px\"\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [isAccountCreated && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          style: {\n            color: \"green\"\n          },\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          style: {\n            color: \"red\"\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupComponent2, \"HxKA4WQ5nqAjjeqXCI2rwtGWt7w=\");\n_c = SignupComponent2;\nvar _c;\n$RefreshReg$(_c, \"SignupComponent2\");","map":{"version":3,"names":["SignupComponent2","visible","closeModal","register","_s","isModalOpen","setIsModalOpen","useState","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","userType","secretKey","setAlertMessage","setIsAccountCreated","formData","password","confirmPassword","fetch","method","headers","Accept","body","JSON","stringify","fname","lname","email","undefined","then","res","ok","Error","json","data","catch","error","console","message","includes","_jsxDEV","Modal","isOpen","onRequestClose","style","overlay","backgroundColor","content","width","height","margin","children","onSubmit","isAccountCreated","className","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/signup_component2.jsx"],"sourcesContent":["// ... (other imports and code)\n\nexport default function SignupComponent2({ visible, closeModal, register }) {\n  // ... (other state variables)\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // ... (useEffect and other functions)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      userType === \"Company\" &&\n      secretKey !== \"6eybj;l,;kp-=0-0-090979865e5322457t87{\"\n    ) {\n      setAlertMessage(\"Invalid Company. Please enter the correct Secret Key.\");\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n      setIsAccountCreated(false);\n      return;\n    }\n\n    if (formData.password !== confirmPassword) {\n      setAlertMessage(\"Password and Confirm Password do not match.\");\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n      setIsAccountCreated(false);\n      return;\n    }\n\n    fetch(\"http://localhost:5000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        fname: formData.fname,\n        lname: formData.lname,\n        email: formData.email,\n        password: formData.password,\n        userType,\n        secretKey: userType === \"Company\" ? secretKey : undefined,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setSuccessMessage(\"Account created successfully\");\n        setAlertMessage(\"\");\n        setErrorMessage(\"\");\n        setIsAccountCreated(true);\n      })\n      .catch((error) => {\n        setIsAccountCreated(false);\n        console.error(error); // Log the error to the console for debugging\n\n        if (\n          error instanceof Error &&\n          error.message.includes(\n            \"E11000 duplicate key error collection: dbcproject.User index: email_1\"\n          )\n        ) {\n          setErrorMessage(\n            \"Email is already in use. Please use a different email.\"\n          );\n        } else {\n          setErrorMessage(\"Account Creation failure\");\n        }\n      });\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={closeModal}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          width: \"600px\",\n          height: \"500px\",\n          margin: \"0px\",\n        },\n      }}\n    >\n      <div>\n        <form onSubmit={handleSubmit}>\n          {isAccountCreated && (\n            <p className=\"success-message\" style={{ color: \"green\" }}>\n              {successMessage}\n            </p>\n          )}\n          {errorMessage && (\n            <p className=\"error-message\" style={{ color: \"red\" }}>\n              {errorMessage}\n            </p>\n          )}\n          {/* ... rest of the form */}\n        </form>\n      </div>\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}