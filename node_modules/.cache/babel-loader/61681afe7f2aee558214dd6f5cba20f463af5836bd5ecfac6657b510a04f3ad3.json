{"ast":null,"code":"var _jsxFileName = \"/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/loginComponent/companyLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CompanyHome from \"../companyHome\";\nimport UserDetails from \"../userDetails/userDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyLogin() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for authentication\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    fetch(\"http://localhost:5000/companylogin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password,\n        userType: \"company\"\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json();\n    }).then(data => {\n      if (data.status === \"ok\") {\n        // Authentication successful\n        setIsLoggedIn(true); // Set authentication state to true\n        setError(\"\"); // Clear any previous error\n        console.log(\"Logged in successfully\");\n        // Redirect to the company dashboard or other page here\n        // You can use react-router-dom for navigation\n      } else if (data.error === \"Invalid Password\") {\n        setError(\"Invalid Password\");\n      } else {\n        setError(\"Login Unsuccessful\");\n      }\n    }).catch(error => {\n      setError(\"Network error. Please try again later.\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Render based on authentication state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Company Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyLogin, \"r/kOmKvXLqiCNJJmSYWWJjPom5U=\");\n_c = CompanyLogin;\nexport default CompanyLogin;\nvar _c;\n$RefreshReg$(_c, \"CompanyLogin\");","map":{"version":3,"names":["React","useState","CompanyHome","UserDetails","jsxDEV","_jsxDEV","CompanyLogin","_s","formData","setFormData","email","password","loading","setLoading","error","setError","isLoggedIn","setIsLoggedIn","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","userType","then","res","ok","Error","json","data","status","console","log","catch","finally","handleInputChange","name","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","className","disabled","_c","$RefreshReg$"],"sources":["/home/kencal20/Documents/DBC/Node/dbcfinal_project/src/components/loginComponent/companyLogin.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CompanyHome from \"../companyHome\";\nimport UserDetails from \"../userDetails/userDetails\";\n\nfunction CompanyLogin() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for authentication\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    fetch(\"http://localhost:5000/companylogin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password,\n        userType: \"company\",\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        if (data.status === \"ok\") {\n          // Authentication successful\n          setIsLoggedIn(true); // Set authentication state to true\n          setError(\"\"); // Clear any previous error\n          console.log(\"Logged in successfully\");\n          // Redirect to the company dashboard or other page here\n          // You can use react-router-dom for navigation\n        } else if (data.error === \"Invalid Password\") {\n          setError(\"Invalid Password\");\n        } else {\n          setError(\"Login Unsuccessful\");\n        }\n      })\n      .catch((error) => {\n        setError(\"Network error. Please try again later.\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  // Render based on authentication state\n  return (\n    <div>\n      {isLoggedIn ? (\n        <div>\n          \n          {/* Render company dashboard content here */}\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <h1>Company Login</h1>\n          <input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={formData.email}\n            onChange={handleInputChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={formData.password}\n            onChange={handleInputChange}\n            required\n          />\n          {error && <div className=\"error-message\">{error}</div>}\n          <button type=\"submit\" disabled={loading}>\n            {loading ? \"Logging in...\" : \"Login\"}\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default CompanyLogin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMiB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,UAAU,CAAC,IAAI,CAAC;IAEhBQ,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBhB,KAAK,EAAEF,QAAQ,CAACE,KAAK;QACrBC,QAAQ,EAAEH,QAAQ,CAACG,QAAQ;QAC3BgB,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;QACxB;QACAjB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACrBF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACdoB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC;QACA;MACF,CAAC,MAAM,IAAIH,IAAI,CAACnB,KAAK,KAAK,kBAAkB,EAAE;QAC5CC,QAAQ,CAAC,kBAAkB,CAAC;MAC9B,CAAC,MAAM;QACLA,QAAQ,CAAC,oBAAoB,CAAC;MAChC;IACF,CAAC,CAAC,CACDsB,KAAK,CAAEvB,KAAK,IAAK;MAChBC,QAAQ,CAAC,wCAAwC,CAAC;IACpD,CAAC,CAAC,CACDuB,OAAO,CAAC,MAAM;MACbzB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAM0B,iBAAiB,GAAIpB,CAAC,IAAK;IAC/B,MAAM;MAAEqB,IAAI;MAAEC;IAAM,CAAC,GAAGtB,CAAC,CAACuB,MAAM;IAChCjC,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACgC,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,oBACEpC,OAAA;IAAAsC,QAAA,EACG3B,UAAU,gBACTX,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGK,CAAC,gBAEN1C,OAAA;MAAM2C,QAAQ,EAAE9B,YAAa;MAAAyB,QAAA,gBAC3BtC,OAAA;QAAAsC,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB1C,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXT,IAAI,EAAC,OAAO;QACZU,WAAW,EAAC,OAAO;QACnBT,KAAK,EAAEjC,QAAQ,CAACE,KAAM;QACtByC,QAAQ,EAAEZ,iBAAkB;QAC5Ba,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF1C,OAAA;QACE4C,IAAI,EAAC,UAAU;QACfT,IAAI,EAAC,UAAU;QACfU,WAAW,EAAC,UAAU;QACtBT,KAAK,EAAEjC,QAAQ,CAACG,QAAS;QACzBwC,QAAQ,EAAEZ,iBAAkB;QAC5Ba,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACDjC,KAAK,iBAAIT,OAAA;QAAKgD,SAAS,EAAC,eAAe;QAAAV,QAAA,EAAE7B;MAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtD1C,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAACK,QAAQ,EAAE1C,OAAQ;QAAA+B,QAAA,EACrC/B,OAAO,GAAG,eAAe,GAAG;MAAO;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxC,EAAA,CAhGQD,YAAY;AAAAiD,EAAA,GAAZjD,YAAY;AAkGrB,eAAeA,YAAY;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}